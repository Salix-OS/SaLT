#!/bin/sh
# vim: set syn=sh ai et sw=2 st=2 ts=2 tw=0:
# Copyright: Cyrille Pontvieux <jrd@salixos.org>
# Licence: GPLv3+
# Version: 0.1
# Initial script launched in the initrd of SaLT

[ "$$" -ne 1 ] && exit 1;

echo -e -n '\n\e[1;36mSaLT initializing... '
export PATH=:/usr/sbin:/usr/bin:/sbin:/bin

# mount -n : /etc/mtab is not writable yet
mount -n -t proc none /proc
mount -n -t sysfs none /sys
# ensure / is writable.
mount -o remount,rw /
# update /etc/mtab regarding /proc and /sys mount points
echo 'none /proc proc rw 0 0' >> /etc/mtab
echo 'none /sys sysfs rw 0 0' >> /etc/mtab

mount -t tmpfs none /tmp

# load the SaLT library
. /lib/libSaLT
echo -e "\e[1;32mDone\e[0m"
[ -z "$SALT_DEBUG" ] && clear
echoinfo "*** Starting Live initialization ***"

cd /
infolog 'Loading essential kernel modules...'
load_core_modules
infolog 'Initialize /dev'
init_dev
infolog 'Starting USB support'
load_usb_modules
infolog 'Starting PCMCIA CardBus support'
load_pcmcia_modules

infolog "Finding $LIVE_NAME device..."
DISTRO_INFO=$(find_distro_device)
if [ -z "$DISTRO_INFO" ]; then
  fumble "Could not find the distro to boot\nFile searched: $IDENT_FILE\nContent searched: $IDENT_CONTENT"
fi
DISTRO_DEV=$(echo $DISTRO_INFO|cut -d: -f1)
DISTRO_MP=$(echo $DISTRO_INFO|cut -d: -f2)
infolog "  $LIVE_NAME found in $DISTRO_DEV"
debugshell

infolog 'Finding save file...'
SAVE_FILE=$(find_save_file "$DISTRO_MP")
if [ -z "$SAVE_FILE" ]; then
  warnlog '  Save file not found, using memory only'
  mkdir -p /mnt/ram
  mount -t tmpfs none /mnt/ram
  (cd /mnt && ln -sf ram rw)
else
  infolog "  Save file found: $SAVE_FILE"
  mkdir -p /mnt/save
  mount -o loop $SAVE_FILE /mnt/save
  if [ $? -ne 0 ]; then
    errorlog "  Cannot mount $SAVE_FILE, using memory instead"
    rmdir /mnt/save
    mkdir -p /mnt/ram
    mount -t tmpfs none /mnt/ram
    (cd /mnt && ln -sf ram rw)
  else
    (cd /mnt && ln -sf save rw)
  fi
fi

debuglog 'Creating union filesystem'
create_union /mnt/rw || fumble 'Cannot create union filesystem'
debugshell
infolog 'Finding SaLT modules...'
for m in $(find_modules $DISTRO_MP); do
  infolog "  - Loading $m"
  load_module "$m" || errorlog "$m cannot be loaded"
  debugshell
done

infolog 'Tweaking the target distro'
debuglog 'Installing hookers in /mnt/union...'
install_hookers /mnt/union
debugshell
[ -e /mnt/union/etc ] || mkdir -p /mnt/union/etc
debuglog 'Disabling root filesystem check'
touch /mnt/union/etc/fastboot
rm -f /mnt/union/etc/forcefsck
debuglog 'Fixing a bug in Slackware /etc/rc.d/rc.S for hardware clock'
touch /mnt/union/etc/hardwareclock
debuglog 'Installing rc.salt service'
cp lib/rc.salt /mnt/union/etc/rc.d/ && chmod +x /mnt/union/etc/rc.d/rc.salt
debuglog 'Informing that / is already mounted in the /mnt/union'
echo 'salt / aufs ro 0 0' > /mnt/union/etc/mtab

[ -z "$SALT_DEBUG" ] && clear
echoinfo "*** Passing execution process to $LIVE_NAME ***\n"
INIT=
for d in . sbin bin usr/sbin usr/bin; do
  if [ -x /mnt/union/$d/init ]; then
    INIT=$d/init
    break
  fi
done
if [ -z "$INIT" ]; then
  fumble "Could not find 'init' in the union filesystem: could not chroot"
else
  cp /mnt/union/$INIT /tmp/init
  ln -s tmp/init init.distro
  change_root_to_distro /mnt/salt/init.distro $runlevel
fi
fumble 'End of init: this line must never be executed!'
