#!/bin/sh
# vim: set syn=sh ai si et sw=2 st=2 ts=2 tw=0:
#
# This file is part of SaLT.
# Copyright: Cyrille Pontvieux <jrd@salixos.org>
# Licence: GPLv3+
# Version: 0.2.1
# Script to tweak the target Slackware distro

[ -e /mnt/salt/lib/libSaLT ] || exit 1
. /mnt/salt/lib/libSaLT
echoinfo '┌─────────────────────────────────────┐'
echoinfo '│ Starting SaLT Live configuration... │'
echoinfo '└─────────────────────────────────────┘'
LIBSUFFIX=
[ -d /usr/lib64 ] && LIBSUFFIX=64
lang=$(get_value_cmdline salt_lang)
if [ -n "$lang" ]; then
  echoinfo "* Apply locale $lang"
  if [ -x /usr/sbin/localesetup ]; then
    /usr/sbin/localesetup $lang >/dev/null 2>&1 # Salix
  elif [ -e /etc/profile.d ]; then
    if [ -f /etc/profile.d/lang.sh ]; then
      grep -q -i '^ *export LANG=' /etc/profile.d/lang.sh
      if [ $? -eq 0 ]; then
        sed -i "s/^ *\(export LANG=\).*$/\1$lang/" /etc/profile.d/lang.sh
      else
        echo "export LANG=$lang" >> /etc/profile.d/lang.sh
      fi
    fi
    if [ -f /etc/profile.d/lang.csh ]; then
      grep -q -i '^ *setenv LANG ' /etc/profile.d/lang.csh
      if [ $? -eq 0 ]; then
        sed -i "s/^ *\(setenv LANG \).*$/\1$lang/" /etc/profile.d/lang.csh
      else
        echo "setenv LANG $lang" >> /etc/profile.d/lang.csh
      fi
    fi
    if [ -f /etc/kde/kdm/kdmrc ]; then
      locale_noutf8=$(echo $lang | sed 's/\.utf8//')
      sed -i "s/\(^\|^#\)Language=.*/Language=$locale_noutf8/" /etc/kde/kdm/kdmrc
    fi
  fi
  if [ -e /etc/profile.d/lang.sh ]; then
    . /etc/profile.d/lang.sh
  fi
  # Make firefox match OS locale
  # Now included in Salix version, but keep it for other Slackware version or distro
  if [ -w /usr/lib$LIBSUFFIX/firefox/greprefs/all.js ]; then
    sed -i -e 's/pref("intl.locale.matchOS",                 false);/pref("intl.locale.matchOS",                 true);/g' /usr/lib$LIBSUFFIX/firefox/greprefs/all.js
  fi
  # Make thunderbird match OS locale
  # Now included in Salix version, but keep it for other Slackware version or distro
  if [ -w /usr/lib$LIBSUFFIX/thunderbird/greprefs/all.js ]; then
    sed -i -e 's/pref("intl.locale.matchOS",                 false);/pref("intl.locale.matchOS",                 true);/g' /usr/lib$LIBSUFFIX/thunderbird/greprefs/all.js
  fi
fi
restart_hal=no
keyb=$(get_value_cmdline salt_keyb)
numlock=$(is_active_cmdline salt_numlock && echo on)
scim=$(is_active_cmdline salt_scim && echo on)
ibus=$(is_active_cmdline salt_ibus && echo on)
if [ -n "$keyb" ] || [-n "$numlock" ] || [ -n "$scim" ] || [ -n "$ibus" ]; then
  # keyboard settting
  [ -n "$keyb" ] || keyb=us
  [ -n "$numlock" ] || numlock=off
  [ -n "$scim" ] || scim=off
  [ -n "$ibus" ] || ibus=off
  txtkb="$key"
  [ "$numlock" = "on" ] && txtkb="$txtkb, with numlock"
  [ "$scim" = "on" ] && txtkb="$txtkb, with scim"
  [ "$ibus" = "on" ] && txtkb="$txtkb, with ibus"
  echoinfo "* Apply keybaord settings: $txtkb"
  if [ -x /usr/sbin/keyboardsetup ]; then # Salix
    /usr/sbin/keyboardsetup -k $keyb -n $numlock -s $scim -i $ibus 2>/dev/null # prevent errors if Xorg packages are not installed.
  else
    grep "^$keyb|.*|.*|.*" /mnt/salt/lib/keymaps | sed -e "s/^.*|\(.*\)|\(.*\)|\(.*\)/\1|\2|\3/" > /tmp/xkb
    xkblayout="$(sed -e "s/^\(.*\)|.*|.*/\1/" /tmp/xkb)"
    xkbvariant="$(sed -e "s/^.*|\(.*\)|.*/\1/" /tmp/xkb)"
    xkboptions="$(sed -e "s/^.*|.*|\(.*\)/\1/" /tmp/xkb)"
    rm /tmp/xkb
    # Fall back to keymap if no xkb maping available
    if [ -z "$xkblayout" ]; then
      xkblayout="$keyb"
      xkbvariant=""
      xkboptions=""
    fi
    /usr/bin/loadkeys -u $keyb.map 1>&2 2>/dev/null
    if [ -e /etc/rc.d/rc.keymap ]; then
      sed -i "s/\(^[ \t]*\/usr\/bin\/loadkeys -u\).*$/\1 $keyb.map/" /etc/rc.d/rc.keymap
    fi
    if [ -e /etc/X11/xorg.conf.d ]; then
      cat <<EOF > /etc/X11/xorg.conf.d/10-keymap.conf
Section "InputClass"
Identifier  "Keyboard settings"
MatchIsKeyboard  "yes"
Driver    "evdev"
Option    "XkbLayout" "$xkblayout"
Option    "XkbVariant" "$xkbvariant"
Option    "XkbOptions" "$xkboptions"
EndSection
EOF
    elif [ -e /usr/share/hal/fdi/policy/10osvendor/10-keymap.fdi ]; then
      if [ ! -e /etc/hal/fdi/policy/10-keymap.fdi ]; then
        mkdir -p /etc/hal/fdi/policy
        cp -f /usr/share/hal/fdi/policy/10osvendor/10-keymap.fdi /etc/hal/fdi/policy/10-keymap.fdi
      fi
      if [ -e /etc/hal/fdi/policy/10-keymap.fdi ]; then
        sed -i "s/\"input.xkb.layout\" type=\"string\">.*</\"input.xkb.layout\" type=\"string\">"$xkblayout"</;
          s|\(<merge key=\"input.xkb.variant\" type=\"string\"\).*|\1>"$xkbvariant"</merge>|;
          s/\"input.xkb.options\" type=\"string\">.*</\"input.xkb.options\" type=\"string\">"$xkboptions"</" /etc/hal/fdi/policy/10-keymap.fdi
      fi
    fi
    if [ "$numlock" = "on" ]; then
      [ -e /etc/rc.d/rc.numlock ] && chmod 755 /etc/rc.d/rc.numlock
      for t in 1 2 3 4 5 6 7 8; do setleds +num < /dev/tty$t > /dev/null; done
      if [ -f /etc/lxdm/lxdm.conf ]; then
        sed -i "/numlock/d; s/\[base\]/\[base\]\nnumlock=1/" /etc/lxdm/lxdm.conf
      fi
      if [ -f /etc/kde/kdm/kdmrc ]; then
        if [ `grep "\(^\|#\)NumLock=" /etc/kde/kdm/kdmrc` ]; then
          sed -i "s/\(^\|#\)NumLock=.*/NumLock=On/" /etc/kde/kdm/kdmrc
        else
          sed -i "s/\[X-\*-Greeter\]/\[X-\*-Greeter\]\nNumLock=On/" /etc/kde/kdm/kdmrc
        fi
      fi
    else
      [ -e /etc/rc.d/rc.numlock ] && chmod 644 /etc/rc.d/rc.numlock
      for t in 1 2 3 4 5 6 7 8; do setleds -num < /dev/tty$t > /dev/null; done
      if [ -f /etc/lxdm/lxdm.conf ]; then
        sed -i "/numlock/d; s/\[base\]/\[base\]\nnumlock=0/" /etc/lxdm/lxdm.conf
      fi
      if [ -f /etc/kde/kdm/kdmrc ]; then
        if [ `grep "\(^\|#\)NumLock=" /etc/kde/kdm/kdmrc` ]; then
          sed -i "s/\(^\|#\)NumLock=.*/NumLock=Off/" /etc/kde/kdm/kdmrc
        else
          sed -i "s/\[X-\*-Greeter\]/\[X-\*-Greeter\]\nNumLock=Off/" /etc/kde/kdm/kdmrc
        fi
      fi
    fi
    if [ "$scim" = "on" ]; then
      [ -f /etc/profile.d/scim.sh ] && chmod +x /etc/profile.d/scim.sh
      [ -f /etc/profile.d/scim.csh ] && chmod +x /etc/profile.d/scim.csh
    else
      [ -f /etc/profile.d/scim.sh ] && chmod -x /etc/profile.d/scim.sh
      [ -f /etc/profile.d/scim.csh ] && chmod -x /etc/profile.d/scim.csh
    fi
    if [ "$ibus" = "on" ]; then
      [ -f /etc/profile.d/ibus.sh ] && chmod +x /etc/profile.d/ibus.sh
      [ -f /etc/profile.d/ibus.csh ] && chmod +x /etc/profile.d/ibus.csh
    else
      [ -f /etc/profile.d/ibus.sh ] && chmod -x /etc/profile.d/ibus.sh
      [ -f /etc/profile.d/ibus.csh ] && chmod -x /etc/profile.d/ibus.csh
    fi
    restart_hal=yes
  fi
fi
[ "$restart_hal" = "yes" ] && /etc/rc.d/rc.hald restart >/dev/null 2>&1
passwd=$(get_value_cmdline salt_passwd)
if [ -n "$passwd" ]; then
  echoinfo '* Set a new root password'
  # root password
  if [ "$passwd" = "ask" ]; then
    echo -ne "\nEnter new password for root: "
    read -s passwd
    echo
  fi
  if [ -n "$passwd" ]; then
    echo "root:$passwd" | /usr/sbin/chpasswd
  fi
fi
if is_active_cmdline salt_nosound; then
  echoinfo '* Mute sound volume'
  for SCONTROL in Master PCM Front Surround Center CD Video Wave Music AC97 Headphone; do
    /usr/bin/amixer -q sset $SCONTROL 0 mute 2>/dev/null
  done
else
  if [ -r /etc/asound.state ]; then
    echoinfo '* Restore sound volume settings'
    /usr/sbin/alsactl restore
  else
    echoinfo '* Set sound volume to 71%'
    for SCONTROL in Master PCM Front Surround Center CD Video Wave Music AC97 Headphone; do
      /usr/bin/amixer -q sset $SCONTROL 71% unmute 2>/dev/null
    done
  fi
fi
if is_active_cmdline salt_autologin; then
  echoinfo '* Set autologin'
  [ -e /etc/gdm/custom.conf ] && sed -i 's/AutomaticLoginEnable=.*/AutomaticLoginEnable=true/' /etc/gdm/custom.conf
  [ -e /etc/kde/kdm/kdmrc ] && sed -i 's/AutoLoginEnable=.*/AutoLoginEnable=true/' /etc/kde/kdm/kdmrc
else
  [ -e /etc/gdm/custom.conf ] && sed -i 's/AutomaticLoginEnable=.*/AutomaticLoginEnable=false/' /etc/gdm/custom.conf
  [ -e /etc/kde/kdm/kdmrc ] && sed -i 's/AutoLoginEnable=.*/AutoLoginEnable=false/' /etc/kde/kdm/kdmrc
fi
proxy=$(get_value_cmdline salt_proxy)
if [ -n "$proxy" ]; then
  echoinfo "* Set proxy to $proxy"
  # set http and ftp proxy (same for both)
  cat <<EOF > /etc/profile.d/proxy.sh
#!/bin/sh
export http_proxy=$proxy
export https_proxy=\$http_proxy
export ftp_proxy=\$http_proxy
export no_proxy=localhost,127.0.0.1
EOF
  chmod +x /etc/profile.d/proxy.sh
  /etc/profile.d/proxy.sh
  phost=$(echo $proxy| sed 's,\(.*://\)\?\([^:]*\)\(:[0-9]*\)\?,\2,')
  pport=$(echo $proxy| sed 's,\(.*://\)\?\([^:]*\)\(:[0-9]*\)\?,\3,')
  which gconftool-2 >/dev/null 2>&1
  if [ $? -eq 0 ] && [ -d /etc/gconf ]; then
    [ -z "$pport" ] && pport=3128
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type string --set /system/http_proxy/host $phost
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type string --set /system/ftp_proxy/host $phost
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type string --set /system/http_proxy/port $pport
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type string --set /system/ftp_proxy/port $pport
  fi
  ffpreffile=$('ls' -1 /usr/lib$LIBSUFFIX/firefox-*/defaults/pref/all*.js 2>/dev/null)
  if [ -n "$ffpreffile" ]; then
    cat <<EOF > $ffpreffile
pref("network.proxy.type", 1);
pref("network.proxy.http", "$phost");
pref("network.proxy.http_port", $pport);
pref("network.proxy.ftp", "$phost");
pref("network.proxy.ftp_port", "$pport");
pref("network.proxy.no_proxies_on", "localhost, 127.0.0.1");
EOF
  fi
else
  [ -e /etc/profile.d/proxy.sh ] && rm -f /etc/profile.d/proxy.sh
  unset http_proxy ftp_proxy
  which gconftool-2 >/dev/null 2>&1
  if [ $? -eq 0 ] && [ -e /etc/gconf/gconf.xml.mandatory/system/http_proxy/\%gconf.xml ]; then
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --unset /system/http_proxy/host
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --unset /system/ftp_proxy/host
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --unset /system/http_proxy/port
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --unset /system/ftp_proxy/port
  fi
  ffpreffile=$('ls' -1 /usr/lib$LIBSUFFIX/firefox-*/defaults/pref/all*.js 2>/dev/null)
  if [ -n "$ffpreffile" ]; then
    sed -i '/proxy/d' $ffpreffile
  fi
fi
echoinfo '┌─────────────────────────────────┐'
echoinfo '│ SaLT Live configuration applied │'
echoinfo '└─────────────────────────────────┘'
