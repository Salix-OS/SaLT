# vim: syn=sh et sw=2 st=2 ts=2 tw=0:

#set theme_name=
insmod gettext

function load_video {
  insmod vbe
  insmod vga
}

function initmenu {
  if [ -z "$menuloaded" ]; then
    set menuloaded=1
    if loadfont $cfgprefix/unicode.pf2 ; then
      set gfxmode=800x600
      load_video
      insmod gfxterm
      terminal_output gfxterm
    fi
    insmod png
    if [ -n "$theme_name" ]; then
      set theme=$cfgprefix/themes/$theme_name/theme.txt
      export theme
      if [ -e "$cfgprefix/themes/$theme_name/theme.cfg" ]; then
        source $cfgprefix/themes/$theme_name/theme.cfg
      fi
    else
      if background_image $cfgprefix/bg.png ; then
        set menu_color_normal=light-cyan/black
        set menu_color_highlight=white/cyan
        set color_normal=white/black
      fi
      set title_posx=2
    fi
  fi
}

# $1 = locale to load
function loadlocale {
  if [ -e $locale_dir/$1.mo.gz ]; then
    set lang=$1
    export lang
  else
    unset lang
  fi
}

function loadkeymap {
  set kbpath=$cfgprefix/keymaps/$salt_kb.gkb
  if [ -f $kbpath ]; then
    keymap $kbpath
    terminal_input at_keyboard
  else
    # reset to us
    terminal_input console
  fi
}

function loadsettings {
  if [ -f $cfgprefix/salt.env ]; then
    load_env -f $cfgprefix/salt.env
    exprot gfxpayload skiplang lang \
      salt_autologin salt_custom salt_debug salt_fromiso salt_hwclock salt_ibus salt_kb salt_kbnum salt_lang salt_langnum salt_locale \
      salt_memonly salt_numlock salt_passwd salt_proxy salt_runlevel salt_synaptics salt_timezone
  fi
}

function savesettings {
  set skiplang=true
  save_env -f $cfgprefix/salt.env gfxpayload skiplang lang \
    salt_autologin salt_custom salt_debug salt_fromiso salt_hwclock salt_ibus salt_kb salt_kbnum salt_lang salt_langnum salt_locale \
    salt_memonly salt_numlock salt_passwd salt_proxy salt_runlevel salt_synaptics salt_timezone
  if [ "$?" != "0" ]; then
    gettext "There was an error saving your settings. Are the live files located on a writeable media like an USB key (i.e. not a CDROM)?"
  fi
}

# $1 = prompt string
# $2 = "boolean" or "string"
# $3 = error message string (not used in "string" mode)
# answer = result as "true" or "false" if "boolean", or the string
function getInput {
  if [ "$#" != "3" ]; then
    echo "getInput prompt boolean|string errorMessage"
    return 1
  elif [ ! "$2" = "boolean" -a ! "$2" = "string" ]; then
    echo "getInput prompt boolean|string errorMessage"
    return 2
  else
    gettextvar Lyes "y"
    gettextvar LYES "Y"
    gettextvar Lno  "n"
    gettextvar LNO  "N"
    if [ "$2" = "boolean" ]; then
      answer=false
    else
      answer=""
    fi
    while true; do
      echo -n "$1 "
      read letter
      echo
      if [ "$2" = "boolean" ]; then
        if [ "$letter" = "$Lyes" -o "$letter" = "$LYES" ]; then
          answer=true
          break;
        elif [ "$letter" = "$Lno" -o "$letter" = "$LNO" ]; then
          answer=false
          break;
        elif [ "$letter" = "" ]; then
          break;
        else
          echo "$3"
        fi
      else
        answer="$letter"
        break;
      fi
    done
    unset Lyes
    unset LYES
    unset Lno
    unset LNO
    unset letter
  fi
}

