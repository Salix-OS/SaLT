# vim: syn=sh et sw=2 st=2 ts=2 tw=0:
ident_file=salix.live
searched_ident_content=mysalix
default_iso_name=salixlive*.iso

function rescue {
	echo "Available devices are:"
	ls
	echo
	echo "We're now going to drop to the rescue shell."
	echo "You can set root, prefix, basedir and possibly iso_path."
	echo "Whereas prefix usually is: prefix=(\$root)/boot/grub/i386-pc"
	echo "When finished you can load the menu with: configfile \$prefix/grub.cfg"
	echo "Press enter to continue. Good Luck!"
	read
	normal_exit
}

echo "Searching the device to boot from..."
unset newroot
# * lists all drives (*) all parts
for i in (*); do
	echo " * Checking: $i..."
	if [ -f $i/$ident_file ]; then
		unset ident_content
    unset basedir
    unset iso_name
		source $i/$ident_file
		echo "   ident_content: $ident_content"
		if [ "$ident_content" == "$searched_ident_content" ]; then
			newroot=$i
			break
		fi
	fi
done

if [ -z "$iso_name" ]; then
	iso_name=$default_iso_name
fi

if [ -z "$basedir" ]; then
	basedir=/
fi
export basedir

# provide some fallback
if [ -z "$newroot" ]; then
	echo
	echo "Error: Could not find the root device!"
	echo "We've been searching for:"
	echo "  identfile: $ident_file"
	echo "  identcontent: $searched_ident_content"
	echo
	rescue
fi

# we need this second check because normal_exit continues execution
# before exiting to the rescue shell
if [ -n "$newroot" ]; then
	echo
	echo "Using as root device: ${newroot}"
	root=$newroot
	prefix=($root)$basedir/boot/grub/i386-pc
	# now check if we should do an iso boot
	for i in $basedir/$iso_name; do
		full_iso_path=$i
		break  # get the first one if there are multiple
	done
	if [ -f $full_iso_path ]; then
		echo "Loopback booting $full_iso_path"
		loopback loop $full_iso_path
		root=loop
		prefix=($root)/boot/grub/i386-pc
		# remove the leading (hd..) prefix
		regexp '(/.*)$' $full_iso_path -s iso_path
		export iso_path
		unset basedir # we're in the iso now so everything's in /
	fi
	if [ ! -f $prefix/grub.cfg ]; then
		echo "Error: No such file: $prefix/grub.cfg"
		echo "Probably root, prefix or basedir are wrong."
		echo
		rescue
	fi
	if [ ! -f $prefix/grub.cfg ]; then
		echo "Now loading the boot menu. This can take a while..."
		# need to load the config explicitly now
		configfile $prefix/grub.cfg
	fi
fi
