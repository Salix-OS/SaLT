# vim: syn=sh et sw=2 st=2 ts=2 tw=0:
unset chosen
unset timeout
unset default
menuclear
gettextvar title "Select an item to change the configuration:"

gettextvar Lmenutitle "Return to boot menu"
menuentry "$Lmenutitle" --class=back {
  source $cfgprefix/boot.cfg
}

if [ "$salt_runlevel" = "3" ]; then
  gettextvar Lmenutitle "Boot to runlevel '3' (text mode)"
  menuentry "$Lmenutitle" --class=item {
    set salt_runlevel="4"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Boot to runlevel '4' (graphical login)"
  menuentry "$Lmenutitle" --class=item {
    set salt_runlevel="3"
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_memonly" ]; then
  gettextvar Lmenutitle "'Copy everything to RAM' disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_memonly="memonly"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "'Copy everything to RAM' enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_memonly=""
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_numlock" ]; then
  gettextvar Lmenutitle "Numlock on boot disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_numlock="numlock=on"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Numlock on boot enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_numlock=""
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ "$salt_ibus" = "ibus=off" ]; then
  gettextvar Lmenutitle "Ibus disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_ibus="ibus=on"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Ibus enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_ibus="ibus=off"
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ "$salt_synaptics" = "synaptics=off" ]; then
  gettextvar Lmenutitle "Synaptics fdi disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_synaptics="synaptics=on"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Synaptics fdi enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_synaptics="synaptics=off"
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_nosound" ]; then
  gettextvar Lmenutitle "Sound on boot enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_nosound="nosound"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Sound on boot disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_nosound=""
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_autologin" ]; then
  gettextvar Lmenutitle "Autologin on boot disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_autologin="autologin"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Autologin on boot enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_autologin=""
    source $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$gfxpayload" ]; then
  gettextvar Lmenutitle "gfxpayload=keep not used"
  menuentry "$Lmenutitle" --class=no --class=item {
    set gfxpayload="keep"
    source $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "gfxpayload=keep used"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set gfxpayload=""
    source $cfgprefix/cheatcode.cfg
  }
fi

gettextvar Lmenutitle "Change root password"
if [ -n "$salt_passwd" ]; then
  if [ "$salt_passwd" = "passwd=ask" ]; then
    set Lmenutitle="$Lmenutitle [ask]"
  fi
else
  set Lmenutitle="$Lmenutitle [live]"
fi
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_passwd_text" ]; then
    echo "=> $salt_passwd_text"
    echo
  fi
  gettextvar Linputmsg "New root password (choose 'ask' to be asked at boot):"
  getInput "$Linputmsg" string ""
  if [ -n "$answer" ]; then
    set salt_passwd_text="$answer"
    set salt_passwd="passwd=$answer"
  else
    set salt_passwd_text=""
    set salt_passwd=""
  fi
  unset answer
  unset Linputmsg
  source $cfgprefix/cheatcode.cfg
}

gettextvar Lmenutitle "Set a proxy"
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_proxy_text" ]; then
    echo "=> $salt_proxy_text"
    echo
  fi
  gettextvar Linputmsg "New proxy (empty for no proxy):"
  getInput "$Linputmsg" string ""
  if [ -n "$answer" ]; then
    set salt_proxy_text="$answer"
    set salt_proxy="proxy=$answer"
  else
    set salt_proxy_text=""
    set salt_proxy=""
  fi
  unset answer
  unset Linputmsg
  source $cfgprefix/cheatcode.cfg
}

gettextvar Lmenutitle "Boot from an ISO"
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_fromiso_text" ]; then
    echo "=> $salt_fromiso_text"
    echo
  fi
  gettextvar Linputmsg "Path to the ISO to boot from:"
  getInput "$Linputmsg" string ""
  if [ -n "$answer" ]; then
    set salt_fromiso_text="$answer"
    set salt_fromiso="fromiso=$answer"
  else
    set salt_fromiso_text=""
    set salt_fromiso=""
  fi
  unset answer
  unset Linputmsg
  source $cfgprefix/cheatcode.cfg
}

gettextvar Lmenutitle "Custom linux kernel parameters"
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_custom" ]; then
    echo "=> $salt_custom"
    echo
  fi
  gettextvar Linputmsg "Enter custom linux kernel parameters:"
	getInput "$Linputmsg" string ""
	set salt_custom="$answer"
	unset answer
  unset Linputmsg
  source $cfgprefix/cheatcode.cfg
}

