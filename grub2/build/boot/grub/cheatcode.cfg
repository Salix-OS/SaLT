# vim: syn=sh et sw=2 st=2 ts=2 tw=0:
source ${cfgprefix}/include.cfg
gettextvar title "Select an item to change the configuration:"

gettextvar Lmenutitle "Return to boot menu"
menuentry "$Lmenutitle" --class=back {
  newmenu $cfgprefix/boot.cfg
}

if [ "$salt_runlevel" = "3" ]; then
  gettextvar Lmenutitle "Boot to runlevel '3' (text mode)"
  menuentry "$Lmenutitle" --class=item {
    set salt_runlevel="4"
    export salt_runlevel
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Boot to runlevel '4' (graphical login)"
  menuentry "$Lmenutitle" --class=item {
    set salt_runlevel="3"
    export salt_runlevel
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_memonly" ]; then
  gettextvar Lmenutitle "'Copy everything to RAM' disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_memonly="memonly"
    export salt_memonly
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "'Copy everything to RAM' enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_memonly=""
    export salt_memory
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_numlock" -o "$salt_numlock" = "off" ]; then
  gettextvar Lmenutitle "Numlock on boot disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_numlock="on"
    export salt_numlock
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Numlock on boot enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_numlock="off"
    export salt_numlock
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_ibus" -o "$salt_ibus" = "off" ]; then
  gettextvar Lmenutitle "Ibus disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_ibus="on"
    export salt_ibus
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Ibus enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_ibus="off"
    export salt_ibus
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_nosound" -o "$salt_nosound" = "off" ]; then
  gettextvar Lmenutitle "Sound on boot enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_nosound="on"
    export salt_nosound
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Sound on boot disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_nosound="off"
    export salt_nosound
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$salt_autologin" -o "$salt_autologin" = "off" ]; then
  gettextvar Lmenutitle "Autologin on boot disabled"
  menuentry "$Lmenutitle" --class=no --class=item {
    set salt_autologin="on"
    export salt_autologin
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "Autologin on boot enabled"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set salt_autologin="off"
    export salt_autologin
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

if [ -z "$gfxpayload" ]; then
  gettextvar Lmenutitle "gfxpayload=keep not used"
  menuentry "$Lmenutitle" --class=no --class=item {
    set gfxpayload="keep"
    export gfxpayload
    newmenu $cfgprefix/cheatcode.cfg
  }
else
  gettextvar Lmenutitle "gfxpayload=keep used"
  menuentry "$Lmenutitle" --class=yes --class=item {
    set gfxpayload=""
    export gfxpayload
    newmenu $cfgprefix/cheatcode.cfg
  }
fi

gettextvar Lmenutitle "Change root password"
if [ -n "$salt_passwd" ]; then
  if [ "$salt_passwd" = "ask" ]; then
    set Lmenutitle="$Lmenutitle [ask]"
  fi
else
  set Lmenutitle="$Lmenutitle [$defaultpasswd]"
fi
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_passwd" ]; then
    echo "=> $salt_passwd"
    echo
  else
    echo "=> $defaultpasswd"
    echo
  fi
  gettextvar Linputmsg "New root password (choose 'ask' to be asked at boot):"
  getInput "$Linputmsg" string ""
  set salt_passwd="$answer"
  unset answer
  unset Linputmsg
  export salt_passwd
  newmenu $cfgprefix/cheatcode.cfg
}

gettextvar Lmenutitle "Set a proxy"
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_proxy" ]; then
    echo "=> $salt_proxy"
    echo
  fi
  gettextvar Linputmsg "New proxy (empty for no proxy):"
  getInput "$Linputmsg" string ""
  set salt_proxy="$answer"
  unset answer
  unset Linputmsg
  export salt_proxy_text salt_proxy
  newmenu $cfgprefix/cheatcode.cfg
}

gettextvar Lmenutitle "Boot from an ISO"
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_fromiso_text" ]; then
    echo "=> $salt_fromiso_text"
    echo
  fi
  gettextvar Linputmsg "Path to the ISO to boot from:"
  getInput "$Linputmsg" string ""
  if [ -n "$answer" ]; then
    set salt_fromiso_text="$answer"
    set salt_fromiso="fromiso=$answer"
  else
    set salt_fromiso_text=""
    set salt_fromiso=""
  fi
  unset answer
  unset Linputmsg
  export salt_fromiso_text salt_fromiso
  newmenu $cfgprefix/cheatcode.cfg
}

gettextvar Lmenutitle "Custom linux kernel parameters"
menuentry "$Lmenutitle" --class=edit {
  if [ -n "$salt_custom" ]; then
    echo "=> $salt_custom"
    echo
  fi
  gettextvar Linputmsg "Enter custom linux kernel parameters:"
	getInput "$Linputmsg" string ""
	set salt_custom="$answer"
	unset answer
  unset Linputmsg
  export salt_custom
  newmenu $cfgprefix/cheatcode.cfg
}

